def is_valid_sudoku(board):
    # 遍历每一行，每一列，每一个3x3的小方格
    for i in range(9):
        # 用三个集合来存储出现过的数字，初始为空
        row_set = set()
        col_set = set()
        block_set = set()
        for j in range(9):
            # 获取当前位置的数字，如果是0，表示空格，跳过
            row_num = board[i][j]
            col_num = board[j][i]
            block_num = board[3*(i//3) + j//3][3*(i%3) + j%3]
            if row_num != 0:
                # 如果数字已经在行集合中，说明有重复，返回False
                if row_num in row_set:
                    return False
                # 否则，将数字加入行集合
                else:
                    row_set.add(row_num)
            if col_num != 0:# 如果数字已经在列集合中，说明有重复，返回False
                if col_num in col_set:
                    return False
                # 否则，将数字加入列集合
                else:
                    col_set.add(col_num)
            if block_num != 0:
                # 如果数字已经在方格集合中，说明有重复，返回False
                if block_num in block_set:
                    return False
                # 否则，将数字加入方格集合
                else:
                    block_set.add(block_num)
    # 如果没有发现重复，返回True
    return True

for i in [[[1, 5, 3, 6, 8, 9, 4, 2, 7], [4, 6, 7, 2, 3, 5, 8, 1, 9], [8, 2, 9, 4, 1, 7, 3, 5, 6], [2, 7, 8, 1, 9, 3, 6, 4, 5], [9, 4, 6, 8, 5, 2, 7, 3, 1], [3, 1, 5, 7, 6, 4, 2, 9, 8], [6, 8, 4, 5, 2, 1, 9, 7, 3], [7, 3, 1, 9, 4, 6, 5, 8, 2], [5, 9, 2, 3, 7, 8, 1, 6, 4]], [[1, 4, 6, 9, 2, 5, 3, 8, 7], [5, 7, 9, 1, 8, 3, 2, 4, 6], [8, 2, 3, 4, 6, 7, 9, 5, 1], [7, 9, 1, 2, 4, 6, 5, 3, 8], [3, 5, 4, 7, 9, 8, 1, 6, 2], [2, 6, 8, 3, 5, 1, 4, 7, 9], [9, 8, 5, 6, 3, 2, 7, 1, 4], [6, 1, 2, 5, 7,4, 8, 9, 3], [4, 3, 7, 8, 1, 9, 6, 2, 5]], [[1, 5, 2, 4, 6, 7, 9, 8, 3], [7, 3, 8, 2, 5, 9, 4, 6, 1], [4, 9, 6, 1, 3, 8, 2, 5, 7], [6, 1, 5, 3, 8, 2, 7, 9, 4], [8, 4, 7, 9, 1, 6, 5, 3, 2], [3, 2, 9, 5, 7, 4, 6, 1, 8], [9, 7, 3, 6, 4, 1, 8, 2, 5], [2, 8, 1, 7, 9, 5, 3, 4, 6], [5, 6, 4, 8, 2, 3, 1, 7, 9]], [[9, 1, 7, 6, 3, 2, 4, 8, 5], [3, 2, 8, 7, 5, 4, 9, 6, 1], [4, 5, 6, 9, 1, 8, 2, 3, 7], [2, 8, 9, 4, 7, 5, 3, 1, 6], [7, 6, 4, 1, 2, 3, 5, 9, 8], [1, 3, 5, 8, 9, 6, 7, 4, 2], [5, 4, 3, 2, 6, 1, 8, 7, 9], [8, 9, 1, 5, 4, 7, 6, 2, 3], [6, 7, 2, 3, 8, 9, 1, 5, 4]], [[9, 2, 1, 6, 8, 7, 3, 4, 5], [7, 6, 4, 5, 2, 3, 1, 8, 9], [3, 5, 8, 4, 9, 1, 7, 2, 6], [1, 7, 2, 3, 6, 8, 9, 5, 4], [5, 9, 3, 1, 4, 2, 6, 7, 8], [8, 4, 6, 7, 5, 9, 2, 1, 3], [4, 3, 5, 2, 7, 6, 8, 9, 1], [6, 8, 7, 9, 1, 4, 5, 3, 2], [2, 1, 9, 8, 3, 5, 4, 6, 7]]]:
    print(is_valid_sudoku(i))